ch06. 이벤트

--<이벤트>

-이벤트란, 웹 브라우저나 사용자가 실행하는 어떤 동작을 말한다.
(예) 웹 문서에서 마우스 버튼을 클릭하는 것, 웹 브라우저가 웹페이지를 불러오는 것 등
-사용자가 웹 문서 영역을 벗어나서 클릭하는 행위는 이벤트가 아니다.
(예) 브라우저 창의 제목 표시줄을 클릭하는 것은 이벤트가 아니다.

*이벤트 처리하기
- 이벤트가 발생하면 그에 따른 연결동작이 있어야한다.
  (이벤트 처리기 / 이벤트 핸들러)
1. HTML 태그에 연결하기
 - 이벤트가 발생한 html 태그에 직접 함수를 연결한다.
<botton onclick = "alert('클릭')" > click</botton>

2. 웹 요소에 직접 함수 연결하기.
 - 스크립스 소스를 변경해도 HTML 마크업에는 영향주지 않게 하려면
   이벤트 처리기도 스크립트 소스에서 처리하는 것이 좋다.
 	요소.on 이벤트명 = 함수

- const botton = document.querySelector("botton");

button.onclick = function(){
 document.body.style.backgroundColor = "green";
}

**함수를 미리 만들어 두었다면 그 함수를 지정해도된다.
이때 실행할 함수 이름 뒤에 중괄호()를 사용하지 않아도 된다.
function changeBackground(){
 document.body.style.backgroindColor = "green",
}

const botton = document. quertSelector("button")
botton.onclick = changeBackground;


*addEventListner() 사용하기
- 이벤트 리스너는 어떤 dom 요소에도 사용할 수 있다.
요소.addEventListner(이벤트,함수,캡처 여부);

요소: 이벤트가 발생한 요소
이벤트: 이벤트 유형. 단, 여기에서는 이벤트 이름 앞에 on을 붙이지 않고
 click이나 keypress처럼 이벤트 이름을 그대로 사용한다. 

함수: 이벤트가 발생했을 때 실행할 함수. 기존에 있는 함수를 사용해도 되고 직접 익명 함수를 작성해도 된다. 

익명 함수로 실행할 때는 event 객체를 사용해서 다양한 것들을 처리할 수 있다.

캡처 여부: 이벤트를 캡처링하는지의 여부. true면 캡처링을, false면 버블링을 한다는 의미. 선택 사항이며 기본값은 false



*모달 박스(modal box) : 화면에 내용이 팝업되면서 기타 내용은 블러 처리되어 
팝업된 내용에만 집중할 수 있게 해 주는 창 (라이트 박스라고도 함) 

-모달 박스에 표시되는 내용은 웹 문서 안에 미리 만들어져 있어야 한다. 
CSS와 자바스크립트를 사용해서, 처음에는 모달 박스 부분을 화면에 감춰 두었다가
버튼을 클릭하거나 특정 이벤트가 발생했을 때 모달 박스를 표시한다. 

